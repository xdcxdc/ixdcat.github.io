[{"title":"【置顶】欢迎来到本站","date":"2048-10-23T16:00:00.000Z","path":"2048/10/24/top-pinned/","text":"欢迎来到本站目前仍在建设中…关注公众号与打赏请点击下方按钮，谢谢支持~","tags":[]},{"title":"在 ArcGIS 内使用 tbx 工具箱","date":"2016-10-31T05:59:33.000Z","path":"2016/10/31/tbx-in-ArcGIS/","text":"tbx 文件是 ArcGIS 的工具箱文件（如下图），因此首先需要安装有 ArcGIS 软件。 tbx 文件在 ArcGIS 内打开一般有两种方法： 1. 直接在目录窗口打开 在 ArcMap 软件的目录(Catalog) 窗口定位到该文件，并双击打开。必要时可能需要先添加文件夹连接。 2. 添加到已有工具箱列表 在 ArcMap 软件的工具箱(ArcToolbox) 窗口，对窗口内的 ArcToolbox右键单击，再 添加工具箱... ，找到 tbx 文件并选中，点 打开 ，该工具箱即被添加到默认的工具箱列表内，下次使用不必再到原文件夹内去寻找。","tags":[{"name":"ArcGIS","slug":"ArcGIS","permalink":"https://i.xdc.at/tags/ArcGIS/"},{"name":"tbx","slug":"tbx","permalink":"https://i.xdc.at/tags/tbx/"},{"name":"工具箱","slug":"工具箱","permalink":"https://i.xdc.at/tags/工具箱/"}]},{"title":"【数据分析】上海市公交线路简要分析","date":"2016-10-06T06:22:50.000Z","path":"2016/10/06/shanghai-busline-analysis/","text":"本文首发于微信公众号 远见farsightj，原文链接。 注：以下使用的数据主要是2015年12月抓取的上海市公交线路网数据，与最新抓取的数据相比，新的数据更加完善。 公共交通一直以来都是城市发展的重点，国务院也曾多次就发展城市公共交通下发指导意见。2016年2月24日，《上海市公共汽（电）车客运线路优化导则》编制完成，截至3月3日开始广泛的征询市民意见。那么，上海市民对市内公共交通的运营现状了解多少呢？我们下面将从公交基本服务情况、公交服务能力和区域公交联系三大方面对上海市的公交建设发展现状进行分析。 1. 线路基本服务情况公共汽车一般是城市中发展历史最久，覆盖面积最广的公共交通形式。公交站点分布与公交线路的布局与居民生活日常出行息息相关。城市发展的现阶段，公交作为一种公共资源在空间上的分布肯定是非均质的。那么，在上海市内哪些地区公交站点、公交线路的分布最为密集呢？于是我们计算了站点(计算时使用的数据中，如果同一站点停靠了多条公交线路，则每条线路都会有一个对应的点。下文涉及站点时与此相同)的点密度图与线路的线密度图(同一线路的往返方向为不同的两条线)。从以下两图可以看到，公交站点与公交线路主要集中在中心城区与郊区的副中心，与上海市的城镇体系结构和人口空间分布情况基本一致。 除了站点密度和线路密度之外，公交线路的运营长度也是评价公交服务水平的重要指标，一般以不超过15公里为宜。线路过长，车辆周转率下降，为保证效率需要投入更多的运营车辆而增加成本，否则发车间隔增加，乘车不便；而线路过短，则会导致居民出行换乘次数增加，同样会给乘客带来诸多不便。统计分析显示，上海市公交运营长度主要集中在15公里左右，有大量的运营长度超过15公里的公交；线路长路超过20公里后的公交数量急剧下降。这也和上海市建成区面积的扩张有一定的关系。 公交线路在尽可能保证覆盖城市道路的同时，线路非直线系数（起点、终点间的路上实际距离与两点间直线距离的比值）也不宜过大，最后应该控制在1.5以下，过大则会导致居民出行距离和出行时间增加。经过分析发现，上海市一半以上线路的非直线系数超标，但不排除分析结果受到了部分环形线路干扰的情况。 从运营时间来看，公交线路的运营时间主要集中在白天的8:00-18:00时间段，在凌晨1:00-4:00时间段运营车辆最少。公交运行一般在早上7:00时段正式开始，运行线路数在至7点-19点的时间段内一直维持在高水平。在夜间运营的车辆中，主要是从市中心开往郊区方向，徐泾镇方向有较多夜间行车。 2. 服务面积与服务人口对于公交系统的评价，一个重要的指标是其服务范围。一般公交站点的服务半径在300至500米，是步行适宜的距离，据此计算公交站点的服务面积覆盖率可以评价公交线路的服务能力。就整个上海市而言，以300米来计算公交站点的服务范围，则服务面积共覆盖上海市建成区的56.40%，以500米计算服务范围，则覆盖建成区面积的78.15%，距离500米内90%的面积覆盖的目标还有很长的路要走。 以上是从服务面积的角度分析覆盖率，那么，从服务人口数角度的分析结果会是怎样呢？以上海市第六次人口普查的常住人口密度作为服务人口的统计依据，计算后发现，300m和500m半径的服务人口分别占到了常住人口总数的74.95%和89.20% 。从服务人口角度计算的上海市公交服务能力更好。 上文已提到，公交资源的空间分布是不均衡的。我们对于上海市不同的行政区的公交资源进行了比较分析。比较不同的行政区内公交站点数量发现，浦东新区、闵行区、松江区内公交站点的数量是所有行政区中最多的。然而在计算单位面积内的公交站点数量时，我们发现，黄浦区、静安区、虹口区等中心城区的单位面积的公交资源排在前列，中心城区公交站的密度仍远远大于郊区。 比较不同行政区内的公交线路里程数，我们了发现相同的情况。公交线路总里程的比较上，郊区大于中心城区；但比较单位面积内的公交里程，中心城区则远远大于郊区。 公共交通的建设上是中心城区占优，因此不同地区的公交服务情况也会不同。我们比较了各行政区内人均的公交站点数量和公交里程。在人均公交里程上，各个行政区的差别不大。但比较每个站点平均服务人口上，中心城区所面临的服务的压力要比郊区地区大得多。 3. 公交线路空间联系公交线路串联起了上海市内不同的行政区和重要的地点。具体每个街道之间通过公交线路的联系程度有多强呢？我们设定，一条公交线路只要同时在两个街道有停靠，那就为这两个街道间的联系强度值+1，最终生成对应的街道联系矩阵。由下图可知，联系较强的区域主要由中心城区向外呈放射状分布，陆家嘴街道和徐家汇街道分别是浦东和浦西的公交联系核心，但浦东浦西之间的公交联系较弱。 以上就是我们初步的分析结果，欢迎各位大侠与我们交流讨论~ 本文编辑： xdc@farsightj.cn , zyp@farsightj.cn , tjl@farsightj.cn 欲了解更多数据与分析情况，欢迎关注公众号“远见”与我们联系。扫描下面的二维码识别关注。手机端微信外看到此文章，可在微信搜索“farsightj”添加我们的公众号。 也欢迎持续关注远见网站 http://farsightj.cn 。","tags":[{"name":"公交线路","slug":"公交线路","permalink":"https://i.xdc.at/tags/公交线路/"},{"name":"公交","slug":"公交","permalink":"https://i.xdc.at/tags/公交/"},{"name":"开放数据","slug":"开放数据","permalink":"https://i.xdc.at/tags/开放数据/"},{"name":"上海市","slug":"上海市","permalink":"https://i.xdc.at/tags/上海市/"},{"name":"数据分析","slug":"数据分析","permalink":"https://i.xdc.at/tags/数据分析/"}]},{"title":"【数据介绍】全国公交线网数据","date":"2016-10-06T04:21:38.000Z","path":"2016/10/06/busline-data/","text":"本文首发于微信公众号 远见farsightj，原文链接。 新鲜出炉的全国公共交通（公交、地铁、部分长途线路）站点与线网数据，线路约8万条。 全国公共交通站点： 全国公共交通线网： 上海市公共交通线网，超精准线路哦： 市中心放大： 属性包含运营时间、发车间隔、票价、是否空调车等。 欲了解更多数据与分析情况，欢迎关注公众号“远见”与我们联系。扫描下面的二维码识别关注。手机端微信外看到此文章，可在微信搜索“farsightj”添加我们的公众号。 也欢迎持续关注远见网站 http://farsightj.cn 。","tags":[{"name":"公交线路","slug":"公交线路","permalink":"https://i.xdc.at/tags/公交线路/"},{"name":"公交","slug":"公交","permalink":"https://i.xdc.at/tags/公交/"},{"name":"地铁","slug":"地铁","permalink":"https://i.xdc.at/tags/地铁/"},{"name":"开放数据","slug":"开放数据","permalink":"https://i.xdc.at/tags/开放数据/"},{"name":"数据介绍","slug":"数据介绍","permalink":"https://i.xdc.at/tags/数据介绍/"}]},{"title":"【数据介绍】全国POI数据","date":"2016-10-06T02:20:40.000Z","path":"2016/10/06/poi-data/","text":"本文首发于微信公众号 远见farsightj，原文链接。字段信息等更新在文末。 新鲜出炉的2016全国POI，共约4500+万条。分类齐全，位置精准，字段完整。展示如下： 全国POI密度分布： 全国黄焖鸡米饭分布： 全国沙县小吃分布: 全国公交站点分布： 同济大学周边全部POI： 结构化存储，任意筛选切分！各位项目或研究大侠！有需要请与我们公众号联系哦~ 欲了解更多数据与分析情况，欢迎关注公众号“远见”与我们联系。扫描下面的二维码识别关注。手机端微信外看到此文章，可在微信搜索“farsightj”添加我们的公众号。 也欢迎持续关注远见网站 http://farsightj.cn 。 UPDATE:数据字段信息： POI分类对照表可 点此下载 TIP:高德 API 在返回 POI 结果时，并非是完整数据，而是存在一定程度的缺失。部分权重较低的 POI，如 ATM 等，在大类搜索结果里缺失就较多。为了规避缺失，可采用更换不同关键词、更改搜索范围等方法交叉抓取，将得到的结果合并去重。但这样会带来较大的抓取工作量，目前已有的4500+万条数据已能满足大多数场景下的分析需求。如果需要某细分类的更完整数据，可发邮件至 i@xdc.at 定制抓取服务。","tags":[{"name":"开放数据","slug":"开放数据","permalink":"https://i.xdc.at/tags/开放数据/"},{"name":"数据介绍","slug":"数据介绍","permalink":"https://i.xdc.at/tags/数据介绍/"},{"name":"POI","slug":"POI","permalink":"https://i.xdc.at/tags/POI/"}]},{"title":"使用 SQL Server 存储空间要素","date":"2016-10-05T07:20:39.000Z","path":"2016/10/05/geometry-in-SQL-Server/","text":"本文地址：https://i.xdc.at/2016/10/05/geometry-in-SQL-Server/ 写在前面 :为什么要在 SQL Server 内创建空间要素？该需求来自于千万级别POI数据的存储与可视化。存储部分使用 SQL Server 即可，并且筛选查询的效率也比较高。可视化方面用的比较多的是 ArcGIS , 分析起来也比较方便，但对于大批量数据的处理效率比较低。因此就希望能够把数据库的存储与查询能力，和 ArcGIS 的空间数据可视化与分析能力结合起来。经过一番搜索，得到了以下的解决方案。 1. 在 SQL Server 内创建空间要素在数据库内创建空间要素的方法来自于微软官方文档 创建、构造和查询几何图形实例，在 SQL Server 2014 上测试可用。此处以创建点要素为例: geometry::STPointFromText(&#39;POINT (x y)&#39;, SRID)其中 x, y 为坐标值。SRID为空间参考编号，可在 ArcGIS 内空间参考设置处找到不同坐标系的ID， WGS 1984 坐标系的 SRID 为 4326 。因此可用以下代码创建一个经纬度为121.15545, 31.65894的点。1select geometry::STPointFromText(&apos;POINT (121.15545, 31.65894)&apos;, 4326) 2. 构造一个 ArcGIS 可直接连接的数据表要在 ArcGIS 内直接显示 SQL Server 数据表内的空间要素，则对数据表的结构有一定要求。以点要素为例，创建的表需要以int类型的OBJECTID字段作为主键，并有一个geometry数据类型的字段。示例代码：1234567891011121314151617181920/***** 创建包含空间数据的表 *****/USE [测试数据库]CREATE TABLE [测试数据表] ( [OBJECTID] [int] primary key not NULL, [id] [varchar](10) NULL, [name] [varchar](200) NULL, [lng] [float] NULL, [lat] [float] NULL, [形状] [geometry] not NULL)/***** 将数据插入表中 *****/insert into [测试数据表]SELECT ROW_NUMBER() over (order by [id]) as [OBJECTID] ,[id] ,[name] ,[lng] ,[lat] ,geometry::STPointFromText(concat(&apos;POINT (&apos;,convert(varchar, [lng], 128), &apos; &apos;, convert(varchar, [lat], 128), &apos;)&apos;), 4326 ) as [形状] FROM [原数据表] Tip :快速获得原数据表的数据结构代码，可对原数据表右键-编写表脚本为-CREATE 到-新查询编辑器窗口 3. 使用 ArcGIS 显示 SQL Server 内存储的数据ArcGIS 软件提供了丰富的数据源方式，其中就包括 SQL Server。 ArcMap 内，目录窗口，双击数据库连接-添加数据库连接。 在弹出的窗口内，数据库平台选择SQL Server，实例填写 SQL Server 服务器名（SQL Server 安装在本机的话，可填写localhost或本机计算机名），身份验证类型按需选择，默认为操作系统身份验证，然后在下拉列表内选择数据表所在数据库，确定即可。 在数据库连接下找到新添加的连接，双击打开，将包含空间数据的表拖到显示窗口内即可。如果数据量较大，计算范围时间过程，可选择使用空间参考范围跳过此步骤。 如果只需要显示部分的数据，可在图层的属性-定义查询内填入筛选查询语句。筛选操作由数据库后台完成，因此效率还可以接受。 本文来自 i.xdc.at/2016/10/05/geometry-in-SQL-Server/ Tip :如果想创建存储其他空间要素类型的数据表，如线要素的表，可在 ArcGIS 内将已有的线数据图层右键-数据-导出数据...，输出要素类的保存类型选择数据库要素类，将数据保存到数据库连接里的一张新表内，然后在 SQL Server 内查看这张表的结构，具体操作为对这张表右键-编写表脚本为-CREATE 到-新查询编辑器窗口 。 UPDATE: 2016-10-06为提高数据在 ArcGIS 内显示的效率，最好对数据表创建空间索引，参见 创建、修改和删除空间索引 。 本文来自 https://i.xdc.at/2016/10/05/geometry-in-SQL-Server/","tags":[{"name":"SQL Server","slug":"SQL-Server","permalink":"https://i.xdc.at/tags/SQL-Server/"},{"name":"ArcGIS","slug":"ArcGIS","permalink":"https://i.xdc.at/tags/ArcGIS/"}]},{"title":"Markdown 入门","date":"2016-10-04T09:04:12.000Z","path":"2016/10/04/markdown-test/","text":"标题 标题直接以1个或多个#开头，表示不同等级。 一级标题二级标题三级标题四级标题五级标题六级标题 有序列表直接数字加句号加内容即可。无序列表以-、+或者*开头 有序列表1 有序列表2 1234如果不想产生列表，则需要用\\转义，如1986\\. What a great season.以下字符均可加 \\ 进行转义来显示为普通符号:\\ ` * _ &#123;&#125; [] () # + - . ! 无序列表1测试多行 无序列表2 无序列表* 无序列表* 引用的内容以&gt;开头 这里是引用多行引用 测试插入图片![图片替代文字](http://i.xdc.at/assets/avatar/avatar.png &quot;图片标题&quot;) 测试插入连接[链接文字](http://i.xdc.at/ &quot;链接标题&quot;)主页链接标题可省略 粗体 **这里是粗体**斜体 *这里是斜体* 这里是粗体这里是斜体 表格 |表头1|表头2|表头3| |----|:----:|----:| |值1|值2|值3| |靠左|居中|靠右| –表头1– –表头2– –表头3– 值1 值2 值3 靠左 居中 靠右 代码区块缩进4个空格或者一个制表符即可产生代码区块(上下要有空行)或前后使用三个 ` 。 import time print time.ctime() 12import timeprint time.ctime() 行内代码，使用两个`括起来。测试 import time 。 分割线三个-、_或* 教程来自Markdown——入门指南","tags":[{"name":"Markdown","slug":"Markdown","permalink":"https://i.xdc.at/tags/Markdown/"}]},{"title":"Hello World","date":"2016-10-04T06:22:20.000Z","path":"2016/10/04/first-post/","text":"这是一篇使用Hexo生成的博文。 最初看到GitHub + Hexo的建站教程是在知乎专栏 GitHub + Hexo (1)：在 OS X 下建立你的第一个博客——史上最靠谱教程 ，随后找到相应的 Windows 下教程 用 GitHub + Hexo 建立你的第一个博客 。 相对Jekyll来看，Hexo似乎上手容易的多，加上已注册 GitHub 并有独立域名，因此很快就完成了部署测试。主题选择了简洁风格的 yilia，使用起来效果不错。 Markdown 的编辑使用了 Haroopad，参照着 Markdown——入门指南 写下此文。 感谢提供开源工具、平台以及相关教程的公司与个人，是你们让互联网更加自由和美好。 UPDATE: 2016年10月20日11:10:29将托管服务从 GitHub 迁移到 Coding.net UPDATE: 2016年10月27日00:19:22将主题更换为 indigo","tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://i.xdc.at/tags/Hexo/"},{"name":"GitHub","slug":"GitHub","permalink":"https://i.xdc.at/tags/GitHub/"},{"name":"yilia","slug":"yilia","permalink":"https://i.xdc.at/tags/yilia/"},{"name":"Markdown","slug":"Markdown","permalink":"https://i.xdc.at/tags/Markdown/"},{"name":"Coding.net","slug":"Coding-net","permalink":"https://i.xdc.at/tags/Coding-net/"}]}]